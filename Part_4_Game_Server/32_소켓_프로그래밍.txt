

        소켓 프로그래밍 - 네트워크 프로그래밍 시작 


드디어 네트워크 파트로 넘어왔습니다. 
통신을 하고 데이터를 주고 받는 내용을 시작할건데 기본적으로 네트워크 이론을 먼저 배우고 소켓 프로그래밍을 배우는게 정석적이긴합니다.

그런데 이번 강의에서는 순서를 바꿔서 일단 소켓프로그래밍에 해딩을 해보고 그 다음에서야 네트워크 이론을 배워보겠습니다. 

본래 순서대로 네트워크 이론부터 배우면 어디에 사용해야 할지도 모르는 내용이기도 하고 양도 많다보니 집중이 잘 안될 수 있는데 먼저 
그 필요성부터 알게되면 좀 더 흥미롭게 배울 수 있을겁니다. 

서버프로그래밍에서는 네트워크 이론은 한번쯤은 공부해야하긴 하기때문에 너무 어렵게 생각하지 않아도 됩니다. 

한가지 더 유의할 점은 지금까지 C++ 문법이나 데이터 관리 같은 종류는 비교적 쉬운 내용이었고 그래픽스나 네트워크 같은게 좀 더 어려운 내용이기는 하지만
꼭 필요한 내용이니깐 포기하지 말고 배워보겠습니다. 

그래픽스때와 마찬가지로 네트워크에서는 매우 많은 함수들이 등장합니다. 
그래서 멘붕이 올지도 모르지만 솔직히 말해서 정신이 없는게 당연한겁니다. 그래픽스를 배울때 처럼 처음 보는 함수하나하나의 모든 동작원리를 
다 알면서 사용할 필요까지는 없습니다. 그냥 전체적인 흐름을 분석하는데 집중해야합니다. 이 분야를 정말로 주력으로 개발하시는 분들이나 전부 이해해야하는 것입니다. 


그래서 이 정신없을 수 있는 소켓 프로그래밍을 설명하기 위해 먼저 대략적인 비유를 통해 알아보겠습니다. 

다시 멀티쓰레드 시작할때 들던 비유인 식당의 이야기를 해보겠습니다. 
서버가 식당과 유사 하다고 했었는데 이번에는 추가로 식당에서 문의전화를 받아서 고객님들의 질문에 대답해주는 시스템을 구축하고 싶습니다.

질문을 보통 기본 상담사에 연결하고 거기서 문제 종류 같은거에 따라 분류를 하게 될겁니다. 

이제 고객 입장에서도 한번 생각해보고 식당 입장에서도 생각해볼겁니다. 

가장 먼저 해야할 일은 직원을 하나 고용해서 안내원으로 사용할건데 이 직원의 역할은 일단 중앙 전화를 받아서 해당 용무의 직원으로 넘겨주는 역할을 할겁니다. 
그러면 이제 일단 대표하는 전화번호를 배정 받아야 할겁니다. 010-1111-2222 라는 번호를 받았다고 해보겠습니다.

고객이 대표전화로 전화를 걸게 될거고 처음 직원은 상시 대기중이라 전화를 받을겁니다. 이 직원을 이제 '대리인' 이라고 하겠습니다. 
대리인에게 전화를 건다음 만약 테이블이라는 구역에 연락할 필요가 생기면 이전에는 테이블에 직원을 하나 더 둬서 연락을 했었는데 이제는 그냥 테이블 위치에 전화기를 하나 더 둬서 
연락을 합니다. 전화를 건 고객의 번호도 대리인의 전화에 찍히게 될것이고 고객의 전화번호도 테이블에 전달되기도 할겁니다. 
그리고 한번 전달된 이후로는 메인 대리인을 통하지 않고도 고객과 테이블 대리인간의 통신이 이루어 집니다. 

이렇게 고객과 식당간에 통신이 이루어 질것이고 이걸 다시 고객 입장에서 이 과정을 알아보겠습니다.

손님관점에서는 식당 관점보다 훨씬 간단합니다. 먼저 손님 자신의 전화번호가 있을거고 그리고 지금 전화하고 싶은 식당의 대표번호로 전화를 걸면 됩니다. 
이렇게가 끝입니다. 

이후로는 식당에서 알아서 테이블 대리인에게 고객 전화를 연결시키게 될겁니다. 


실제 현실과는 다른 비유가 될 수도 있지만 지금 이 설명의 흐름을 이해하는게 중요합니다. 

다시 정리해서 고객 입장과 식당입장을 구분하자면 

- 고객
- 1) 핸드폰 준비
- 2) 식당 번호로 문의 
- 대리인을 통해 식당특과 대화가능

- 식당 
- 1) 안내원 고용
- 2) 안내원 교육 (대표 번호 배정)
- 3) 영업 시작
- 4) 안내
- 대리인을 통해 손님과 대화 가능 

이 흐름을 잘 기억합니다. 그러면이게 앞으로 배워볼 소켓프로그래밍과 구조가 비슷합니다. 

결국 네트워크 통신에서도 클라이언트와 서버가 있을겁니다. 
클라이언트는 단어 그대로 고객, 전화를 거는쪽을 말하는것이고 서버는 서빙을 하는쪽 식당을 말합니다. 

클라이언트
- 1) 소켓 준비
- 2) 서버 주소로 Connect
소켓을 통해 서버와 패킷 송수신 가능

서버
- 1) Listener 소켓 준비
- 2) Bind(서버 주소/ Port를 소켓에 연동)
- 3) Listen
- 4) Accept
클라 세션을 통해 손님과 통화 가능 

위에서 소켓이라는게 핸드폰에 해당하는 단말이고 서버주소가 이제 식당 메인 번호입니다. 
안내원을 Listener 라고 하고 Listener 에게 가게 번호를 교육하는걸 Bind라고 합니다.

다른 세부 용어들은 앞으로 배울것이기 때문이 일단 넘어가겠습니다. 

클라이언트와 서버가 따로따로 동작하기는하지만 클라이언드가 통신을 시작하기 위해서는 서버쪽에 2) Bind 까지 완료가 되고 Listen 함수로 요청을 받고 
Accept으로 답을 리턴하게 될겁니다. 

