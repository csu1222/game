#include <iostream>
using namespace std;

// 오늘의 주제 : 문자와 문자열
// bool은 그냥 정수지만 참/거짓을 나타내기위해 사용한다 했었습니다.
// 사실 char도 마찬가지입니다. 그냥 정수지만 '문자' 라는 의미를 나타내기위해 사용되는게 일반적입니다.

// char : 알파벳 / 숫자문자 를 나타내기 위한 타입
// wchar_t : 유니코드 문자를 나타낸다.


// ASCII (American Standard Code for Information Iterchange)

// '문자'로 사용하겠다는 의미로 작은 따옴표 '' 사용
char ch = 97;	// ASCII 코드에서 소문자 a를 의미하는 번호입니다.
char ch2 = 'a';
char ch3 = '1';  // 1이라는 숫자가 들어가는게 아닌 ASCII에서 문자 1을 나타냅니다.
char ch4 = 'a' + 1;  // ASCII에서 문자 a가 97 번이고 1을 더해서 98이 가르키는 b를 나타냅니다.

// 국제화 시대에는 영어만으로 서비스를 할 수 없음
// 전 세계 모든 문자에 대해 유일 코드를 부여한 것이 유니코드(unicode)
// 참고) 유니코드에서 가장 많은 번호를 차지하는게 한국어/중국어

// 유니코드는 표기 방식이 여러가지가 있는데 대표적으로 UTF8 , UTF16
// UTF8
// - 알파벳, 숫자 의 크기 1바이트(ASCII와 동일한 번호)
// - 유럽 지역의 문자는 2바이트
// - 한글, 한자등 3바이트
// UTF16
// - 알파벳, 숫자, 한글, 한자 등 거의 대부분 2바이트
// - 매~우 예외적으로 고대문자만 4바이트 (사실상 무시해도 됩니다.)

wchar_t wch = L'안'; 


// Escape Sequence
// 표기하기 애매한 애들을 표현
// \0 = 아스키코드0 = NULL
// \t = 아스키코드9 = Tab
// \n = 아스키코드10 = LineFeed (한줄 아래로)
// \r = 아스키코드13 = CarriageReturn (커서를 맨처음으로 이동)
// 참고) \r\n 이 키보드에서 엔터키
// \'

// 문자열 
// 문자들이 열을 지어서 모여있는것 (문자 배열?)
// 정수 (1~8바이트) 고정길이로 저장
// 반면 문자는 
// ex) Hello World 같이 길이가 가변적
// 길이가 가변적이라 문자열 끝에는 \00(NULL) 이 있어야합니다. \00이 이 문자열은 여기까지라고 알려주는 것

char str[] = { 'h', 'e', 'l', 'l', 'o' };		// 함수 밖에서 정의한 변수는 data영역에 저장되기때문에 문자열뒤가 \00으로 초기화 되어 있습니다.


int main()
{
	cout << ch << endl;		// 'a'
	cout << ch2 << endl;	// 'a'
	cout << ch3 << endl;	// '1'

	cout << wch << endl;	// 50504 분명 wchar_t 도 문자라고 했는데 왜 숫자가 출력되는가?
							// 앞의 cput 자체가 char 전용이기때문
	wcout.imbue(locale("kor"));		// wcout 이 wchar 전용 아웃풋 명령이고 한국어는 따로 인식시켜줘야 합니다.
	wcout << wch << endl;	// '안'

	cout << str << endl;

	char str2[] = { 'w', 'o', 'r', 'l', 'd' };	// 문자열 끝에 \00(NULL)로 마무리 되지 않았습니다.
	char str3[] = { 'w', 'o', 'r', 'l', 'd', '\0' }; // world
	// 하지만 일일히 \0을 붙여주기 번거러우니 밑과 같이 선언합니다.
	char str4[] = "hello world";		// 자동으로 \0이 포함되어 있습니다.

	wchar_t wstr[] = L"Hello World";   // 유니코드도 적용됩니다.

	cout << str2 << endl; // world 뒤에 굉장히 지저분하게 아무 문자가 이어져 출력되었습니다.
}