

    애니메이션 리타겟팅


애니메이션 리타겟팅이 무엇이고 왜 필요한지를 알아보겠습니다.

먼저 왜 필요한지부터 보면 지금까지 Paragon_Belica 라고 하는 리소스를 아주 잘 사용하고 있었는데 만약 이 리소스 말고 다른 리소스를가지고 오고 싶다면 어떻게 해야할까요
Mixamo 라고하는 공짜로 이용할 수 있는 애니메이션을 가지고 온다던가 아니면 전 처럼 에픽게임즈에서 다른 애니메이션을 가지고 온다고 하겠습니다.
그런데 지금까지 배운 스켈레탈 메시를 이용한 애니메이션은 뼈대를 움직임으로써 애니메이션을 구현하고 있는것이었습니다.

좀 더 일반적인 상황을 예로 들어보자면 MMORPG를 만들려고하면 다양한 플레이어블 종족들이 있을겁니다. 와우같은경우는 인간, 엘프, 오크등 다양한 종족이 있을겁니다.
이런 많은 종류의 종족들 사이에서 각 종족마다 따로 애니메이션을 만드는것은 아쉽습니다. 모든 2족보행을 하는 종족들은 하나의 애니메이션을 공동으로 사용할 수 있으면 
더욱 경제적일겁니다. 

실습으로 좀 더 알아보겠습니다.
DevMap의 컨텐츠 브라우저에서 Add 버튼을 눌러서 새로운 피쳐와 컨텐츠 팩을 추가 버튼을 눌러봅니다. 
그리고 블루프린트 란에서 기본적인 3인칭 게임 컨텐츠 팩을 프로젝트에 추가해 실습해보겠습니다. 

그러면 컨텐츠 브라우저에 몇가지 폴더가 추가됩니다. Characters, LevelPrototyping, Maps, ThirdPerson 이라는 폴더들이 추가되는데 이중에서 
ThirdPerson 과 LevelPrototyping 이라는 폴더는 사용하지 않을것이기 때문에 삭제해주겠습니다.

다음으로 Characters 폴더에서 우리가 추가한 에셋들이 있는데 Mannequin_UE4 나 Mannequin 폴더를 들어가보면 기본적인 마네킹 같은 스켈레탈 메쉬들이 있습니다. UE4 가 붙은것은 언리얼 4 때 
사용하던 에셋이고 안 붙은것은 언리얼 5에서 사용하게 된 에셋입니다. 
언리얼 5 버전의 에셋들을 가지고 실습해보겠습니다.

Mannequin/Meshes 위치에 있는 SKM_Manny 를 열어보겠습니다. 이 스켈레탈 메쉬의 스켈레톤 트리를 보면 이 메쉬는 spine이 01 부터 05 까지 사용하고 있습니다.
이것과 비교해 UE4 타입의 스켈레탈 메쉬는 이것과 조금 다른 구조의 스켈레톤 트리를 하고 있습니다.
그렇다는것은 UE4 버전의 애니메이션을 현재 버전에 적용시킬수 없을 것 같습니다. 뭔가 변환을 거쳐야 할거같은데 이것이 애니메이션 리타겟팅이라는 것입니다. 

UE5 버전 애니메이션도 있고 UE4 버전 애니메이션도 있는데 예전버전은 현재버전으로 가져온다던가 아니면 반대로도 가능합니다.
이 실습을 위해서는 새 에셋을 추가해줘야합니다. 
컨텐츠 브라우저를 우클릭 > 애니메이션 > IK Rig, IK Retargeter 두가지를 사용할겁니다. 이 두가지 에셋은 언리얼5에서 추가된 내용입니다. 
에셋을 추가하기전에 Mannequin 폴더를 보면 Rigs 라는 폴더가 있습니다. 여기를 보니깐 IK Rig 타입의 IK_Mannequin 이라는 에셋이 있습니다. 이것을 열어보겠습니다. 

IK_Mannequin 을 열어보니깐 역시 Hierarchy 계층구조 라는 곳에서 뼈들 사이의 계층을 표현한 창이 있고 또 IK 리타겟팅 창에서는 체인 네임들이 쭉 나열되어있습니다.
체인 네임이라는 용어를 보면 뼈들이 연이어져 있다라른 의미인것 같습니다. 이것도 뼈대끼리의 구조를 나타내고 있습니다.

언리얼 공식문서에서 리타겟 체인이라는 용어에 대해 설명하고 있는데 뼈대는 메쉬마다 각각의 정보도 다르고 갯수도 다를 수 있지만 이 연결된 체인기준으로 만약 팔을 이루고 있는 체인이라면 
같은 팔이라는 개념은 같을겁니다. 
그래서 리타겟을 할때 같은 개념으로 묶은 체인을 변환하는 개념이라고 할 수 있습니다. 

그런데 이제 우리가 언리얼자체에서 제공한 리소스에서는 UE4 버전이나 UE5 버전이나 IK 파일이 이미 있는데 이것이 없는 경우도 있을겁니다. Paragon_Belica 같은 경우가 그렇습니다.
그래서 Paragon_Belica 에서 직접 실습을 해볼겁니다. 


지금까지 Belica 애니메이션들을 관리하던 Animations 폴더에서 우클릭을하고 IK_Rig 을 추가해보겠습니다. 이름은 IK_Belica 라고 지어줍니다. 
강의에서는 만들때 대상으로 할 스켈레톤을 골라주는데 지금 버전에서는 그냥 빈 에셋이 만들어 지고 그 안에서 프리뷰 메시를 Belica로 골라줬습니다. 

이렇게 새로 만든 IK_Belica 에는 체인 정보들이 텅 비어있습니다. 이것을 채워줘야합니다. 
그런데 Belica의 계층구조를 보니 spine이 01, 02, 03 까지 밖에 없습니다. 그러니깐 UE4 버전의 IK_Mannequin 이랑 더욱 비슷합니다. 이것을 옆에 같이 열어서 참고하며 실습해보겠습니다. 

하지만 모든 체인들이 다 필요하지는 않습니다. 큰 부위만 가져다 사용할겁니다. 

먼저 Root 라는 뼈는 Root 라는 이름의 리타겟 체인이 있습니다. 그 밑으로 pelvis 라는 본이 Retarget Root 라고 되어있는데 이걸 우리 IK_Belica 에도 적용시켜주겠습니다. 
IK_Belica 에도 pelvis 라는 본이 있는데 이것을 우클릭하고 리타깃 루트 설정 이라는 옵션을 클릭해주면 이제 pelvis를 리타깃 루트로 설정이 됩니다. 

이 pelvis가 캐릭터의 허리, 골반에 해당하는데 대부분 뼈의 계층구조를 만들때 이 골반을 루트로 설정합니다.
허리가 움직이면 상체하체 모두가 딸려서 움직이게 되기 때문입니다. 말단에 있는 손가락 뼈를 움직이면 정말 손가락만 움직이게 할 수 있는데 골반은 골반만 따로 움직이는게 불가능할겁니다. 
그렇게 모든 뼈에 영향을 주는 위치를 루트로 정하는것입니다. 

이제 다음으로 체인을 만들어 줘야합니다. 참고하고있는 IK_UE4_Mannequin 의 모든 체인을 가져올 필요는 없고 꼭 필요한 체인만 가져올겁니다. 
일단 체인을 추가하는 방법은 IK 리타겟팅 창에서 Add New Chain 새 체인 추가 버튼을 눌러서 만들어도 됩니다. 
체인 이름과 시작 뼈, 종료 뼈를 설정합니다. 이렇게 직접 설정해도 되는데 좀 더 단순한 방법은 왼쪽의 계층구조 창에서 뼈를 직접 선택해 만들어도 됩니다. 
묶을 뼈들을 복수 선택하고 우클릭을해서 새 리타깃 체인 이라는 것을 클릭해줍니다. 그러면 체인 이름을 정해 줄수 있는데 pelvis 부터 spine_03 까지를 묶어서 Spine 이라고 이름짓겠습니다.
이어서 clavicle_l 이라는 뼈 하나만 체인으로 만들어 줄건데 이름은 LeftClavicle 이라고 하겠습니다. 다음은 그 밑에 upperarm_l 부터 hand_l 까지를 LeftArm 이라는 체인으로 만들어 줍니다. 
다음은 index_01_l 부터 index_03_l 까지를 LeftIndex 라는 체인이름으로 middle_01_l 부터 middle_03_l 을 LeftMiddle 라고 하겠습니다. 
이와 비슷하게 LeftPinky, LeftRing, LeftThumb 체인들을 만들었습니다. 이러면 대략적인 왼쪽 상반신은 끝이 났고 오른쪽 상반신도 작업합니다. 
마찬가지로 RightClavicle, RightArm, RightPinky, RightRing, RightThumb 을 만들었습니다.

다음으로 neck_01, neck_02, head 뼈를 묶어서 Head 라는 체인으로 묶어줍니다. 
남은건 하체쪽 체인이 남았습니다. 여기도 Left, Right 나눠서 만들어 줄겁니다. 
먼저 왼쪽 다리부터 체인을 만들면 thigh_l 라고 왼쪽 허벅지를 의미하는 뼈가 있습니다. 여기서 발까지 하나로 묶자니 thigh_l, calf_l, calf_l_twist_01_l, foot_l, ball_l  
이렇게 나열되어있는데 이 중에서 calf_l_twist_01_l는 thigh_l 부터 이어지는 직계 계층이라기 보다는 calf_l 의 하위에 속하는 뼈입니다. 그래서 그냥 한번에 묶어서 새 타겟으로 
만들려고 하면 체인의 범위가 calf_l_twist_01_l 에서 한번 막히는걸 볼 수 있습니다. 일단 이 막히는걸 무시하고 LeftLeg 이라는 이름으로 체인을 만들어주겠습니다.
그러면 이어서 또 하나 체인이 만들어 집니다. ball_l 까지 이어지는 체인인데 일단 같은 이름으로 또 만들어주겠습니다.
이후 IK Retargeting 창을보면 두번째로 만들어진 버전을 삭제하고 첫번째 버전 LeftLeg, calf_l_twist_01_l 까지 가는 체인을 수정해주겠습니다. ball_l 에서 끝나도록 수정합니다. 
마찬가지로 RightLeg 도 작업해줍니다. 

이렇게 노가다 작업이었지만 한번은 해야할 작업이 끝났습니다. 

그래서 돌아가서 이어 작업해보겠습니다. 참고하고 잇는 Mannequin 을 살펴보면 RTG_Mannequin 이라는게 이미 만들어져있습니다. 
이것을 직접 만들어보는 실습을 해보겠습니다. 우리 게임 애니메이션을 관리하던 폴더에서 IK_Belica 에 이어 IK Retargeter 라는 에셋을 추가해주겠습니다. 
이름을 RTG_Man 이라고 만들어 줄겁니다. 여기서는 변환하려는 IK_Rig 을 골라주면 되는데 예를 들어서 IK_Mannequin의 애니메이션을 IK_Belica 에 적용해주고 싶으면 
IK_Mannequin 을 베이스로 골라주면됩니다. 베이스로 골라주는 방법은 RTG_Man을 열어서 소스 릭 에셋을 IK_Mannequin 으로 설정해주면됩니다. 
다음은 이제 타겟이 누구인지를 설정해줄 차례입니다. 앞서 말했던 대로 IK_Belica가 타겟이 될겁니다. 

이렇게 설정하면 Mannequin 과 Belica 메쉬가 곂쳐서 표시되는데 디테일즈 밑에 타깃 메쉬 오프셋 이라는 옵션에서 x 값을 200 정도되면 적당히 오른쪽으로 Belica 가 이동합니다.
이런식으로 살펴볼 수 있습니다. 여기서 애니메이션을 하나 재생해 테스트 해보겠습니다. 디테일 밑에 에셋 브라우저에서 MM_Run_Fwd 라는 애니메이션을 더블 클릭해보면 
Mannequin 과 Belica 둘다 앞으로 달리는 애니메이션을 취합니다. 다만 벨리카는 옆에 총이 공중에 흔들리는게 눈에 거슬리지만 이것은 벨리카 메쉬가 특이한경우라고 할 수 있습니다. 
벨리카는 롤같은 무기와 캐릭터가 한 덩어리로 움직이는 경우이기 때문에 생기는 문제입니다. 일단은 무시해주겠습니다. 

이런식으로 IK_Rig 으로 본 체인을 맞춰주면 하나의 애니메이션을 같이 사용할 수 있게됩니다. MMORPG 같이 다양한 메쉬를 사용하고 특별히 애니메이션이 많이 다를 필요가 없는 게임에서는 
아주 편한 기능입니다.

이렇게 해서 정상적으로 애니메이션이 동작하게끔 만족하게되면 에셋 브라우저 위쪽에 Export Select Animations 선택된 애니메이션 익스포트 라는 버튼이 있습니다. 
이건 애니메이션을 꼭 하나만 익스포트해야하는건 아니고 여러개를 한번에 할 수 도 있습니다. 테스트 삼아서 MM_Walk_Fwd 라는 애니메이션을 익스포트 해보겠습니다.
어느 경로에 결과물을 저장할건지 고를 수 있는데 우리가 작업하던 Animations 폴더로 선택해줍니다. 그러면 MM_Walk_Fwd 라는 애니메이션 시퀀스가 하나 생겨있습니다.
열어보면 정상적으로 애니메이션이 잘 변환 되었다는걸 볼 수 있습니다. 정말로 그런지 알아보려면 BP_Player 클래스를 열어서 지금까지 사용하던 
ABP_Player 대신에 MM_Walk_Fwd 를 사용한다고 설정해주겠습니다. 게임을 실행해보면 정상적으로 동작하는걸 볼 수 있습니다.

실습을 했으니 다시 BP_Player는 ABP_Player를 사용하도록 복원해주고 창을 닫겠습니다.

한가지만 더 살펴보자면 다시 RTG_Man 으로 가보겠습니다. 일단 A 자세로 돌아가보겠습니다. 타깃 메쉬를 다시 설정하거나 그냥 RTG_Man창을 닫았다가 다시 열면됩니다.
이 상태에서 만약 타깃 메쉬가 베이스 메쉬와 많이 다르게 어깨가 많이 넓은 상황이라고 하겠습니다. 이럴때 그냥 그대로 애니메이션은 익스포트하면 어색해 질겁니다.
이럴때는 왼쪽에 Default pose, 리셋, 새포즈 추가 이런 버튼이 있는 창이 있습니다. 여기서 새 포즈를 추가해서 커스텀 리타깃 포즈라는것을 추가하고 여기서 Edit Pose 를 통해 
포즈를 우리가 수정할 수 있습니다. Edit Pose 를 하면 우리의 커스텀 포즈를 만질 수 있습니다. 
(저의 경우에는 왜인지 IK Retarget 에셋에 Edit Pose 버튼이 존재하지 않았습니다.)
원하는대로 포즈를 사용하다가 다시 Default Pose 로 돌아가면 원래 포즈로 돌아갑니다. 
만약 커스텀 리타깃 포즈에서 팔을 좀 더 벌리도록 만들고 다시 애니메이션을 익스포트하면 팔을 더 벌린 형태로 애니메이션이 익스포팅 됩니다. 
일반적으로는 건드릴 필요없지만 혹시 필요하다면 사용할 수 있습니다.

요즘 에셋을 다운받으면 지금같은 IK_Rig 이 지원하는 경우도 많기 때문에 가져다 사용할때 더욱 간편하게 사용할 수 있는 기능을 알아봤습니다.


이번시간에 알아본 리타겟팅 애니메이션은 사실 우리 프로젝트에서 사용할 계획이 없기 때문에 새로운 애니메이션과 RTG_Man 은 삭제하고 
기본 지원 Mannequin이 있던 Character 폴더도 삭제해주겠습니다.

결국 몇 강의에 거쳐서 3D애니메이션에대해 다뤄 봤습니다. 
애니메이션 블루프린트, 에임 오프셋, 리타겟팅 이것들이 가장 중요한 부분들이고 추가적으로 루트 본 회전, 애니메이션 커버와 같이 마이너한 주제도 다뤄봤습니다.
이런 주제를 몇 번더 실습함으로써 숙달되면 프로그래머로써 기본적으로 알아야하는 애니메이션 지식이라고 할 수 있을겁니다. 