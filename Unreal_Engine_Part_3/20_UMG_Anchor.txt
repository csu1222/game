


    UMG 와 앵커 


이전 시간에 배웠던 네비게이션 메쉬 시간에도 말했듯이 이미 지금 까지 배운 내용으로도 다른 이미지, 메쉬, 사운드, 이펙트 리소스를 사용하면 
생각보다 그럴듯한 게임을 만들 수 있습니다. 

기술적으로는 충분하다는것입니다. 실제로 3D 포트폴리오도 지금 쯤 만들 수 있다고 합니다. 
굳이 빠진 내용을 꼽자면 UI 와 관련된 부분일겁니다. 

그래서 UI 와 관련된 부분을 알아볼겁니다. 

프로젝트에 새로 폴더를 만들어 UI 라는 이름으로 하겠습니다. 
여기서 UMG 라는것을 이용해 UI를 만들것입니다. UI는 Widget Blueprint 라는 에셋을 가지고 UI를 만들겁니다. 이건 Paper 2D 게임 실습할때도 사용해 봤습니다. 
상속받을 클래스는 User Widget 을 상속받겠습니다. 이름은 WBP_UI 정도로 지어서 테스트 용도로 사용하겠습니다.

위젯 블루프린트 창은 우 상단에서 크게 Designer, Graph 두가지 영역으로 나뉩니다. Graph 는 보통 블루프린트 클래스에서 사용하던 이벤트 그래프와 코드를 작성하는 곳이고 
Designer 는 UI 의 그래픽적인 설계를 하는곳입니다. 

일단 디자인적으로 세팅을 하고 그 안에서 사용하는 정보들을 그래프에서 채우는 순서가 될것입니다. 

디자이너 창에서 왼쪽에 Palette 라는 창이 있는데 여기서는 많이 사용하는 UI 컴포넌트 같은 것들이 있습니다. 

우리가 UI 첫번째 시간에는 앵커를 실습할건데 그것을 위해 일단 팔레트 > PANEL 에 가서 Canvas Panel 을 드래그 드롭으로 중앙 창에 배치해도 되고 
아니면 팔레트 밑에 Hierachy 상속성 창에 추가해 줄 수도 있습니다.

일단 Canvas Panel 이 무슨 일을 하는지를 보겠습니다. 
캔버스 패널은 일종의 도화지 같은 기능으로 배치된 캔버스 패널안에 다른 UI 를 배치하면 각 UI 끼리의 상대적 위치를 조절해줍니다. 
왜 상대적 위치를 생각해야하는지 의문이 들 수 있습니다. 그냥 화면에 버튼 같은걸 적당히 배치하면 되지 않을까 싶지만 여기서 고려해야할 점은 
개인 컴퓨터는 각 환경마다 모니터의 크기 해상도가 다르고 특히 모바일 환경은 모델마다 화면비와 크기가 다릅니다. 
이런 여러 크기의 화면마다 한개씩 다 UI 세트를 만들어 주는것은 현실적이지 않습니다. 그래서 상대 위치로 관리해서 최대한 많은 크기, 비율의 화면에 대응하는 UI를 만들려고 하는것입니다.

이런 화면 사이즈에 따른 UI 배치는 정말 골치가 아프고 정답이 없는 분야입니다. 
그럼에도 이런 화면비에 대한 가장 기본적인 기능인 Anchor 에 대해 알아보겠습니다. 
배치한 버튼을 선택해보면 가운데 비주얼 디자이너창에 해바라기 같은 아이콘이 뜨는데 이것도 앵커와 관련있습니다. 또 디테일즈에도 보면 앵커에 대한 옵션들이 있습니다. 
앵커를 고르는 창을 열어보면 화면을 9분할 해서 각각을 정해주는 기본 메뉴들과 화면을 가로로 3줄, 세로로 3줄 씩 나눈 스트레치 앵커 그리고 화면 전체를 차지하는 앵커
이렇게가 디폴트로 준비되어있습니다. 
지금은 왼쪽 최상단으로 선택되어있어 디자이너 창에 캔버스 패널 왼쪽 위에 해바라기 같은 것이 모여있는것이고 이걸 어떻게 해석해야 할까요 

먼저 버튼의 앵커 포지션 좌표를 (0, 0) 으로 바꿔줘봅니다. 그러면 버튼이 캔버스 패널 왼쪽위에 딱 달라붙습니다. 
이게 하는이야기는 이런겁니다. 화면이 계속 변하겠지만 Anchor 닻 이라는 의미인데 이 것을 왼쪽위 최상단에 닻을 내려서 여길 기준으로 UI 의 상대위치를 잡겠다라는 것입니다. 
여길 기준으로 위젯의 좌표 뿐만아니라 크기도 조정할 수 있습니다. 가령 크기X, 크기Y 값을 (300, 150) 으로 줬다고 하면 그만큼의 크기로 바뀌는데 
이후 캔버스 패널을 조절해 화면 크기가 바뀌는걸 시뮬레이션 해보면 바뀐 화면크기에 맞춘 (300, 150) 이라는 크기는 유지 됩니다.

만약에 버튼의 상대좌표를 (100, 100) 으로 했다고 하면 캔버스 패널의 왼쪽위 구석으로 부터 오른쪽을 100픽셀, 아래로 100픽셀 위치부터 버튼 UI를 그리기 시작해 
(400, 250) 픽셀 위치가 버튼의 오른쪽아래 점이 될겁니다. 

그런데 이번에는 우리가 설정한 상대 좌표가 UI의 좌상단이 아니라 UI의 중앙을 가리키도록 하고 싶다면 지금 조정하고 있던 옵션 밑에 Alignment 정렬의 값을 조절하면 됩니다.
지금은 정렬값이 (0, 0) 인데 버튼의 중앙을 좌표기준으로 하려면 (0.5, 0.5) 로 해줍니다. 이런식으로 정렬값은 0에서 1 사이의 값으로 조절할 수 있습니다.

그래서 게임 화면 중 왼쪽 상단에 보통 있는 UI RPG 에서는 캐릭터 초상화 같은것이 올 만 합니다. 

앵커가 좌 상단 뿐만 있는것으 아니고 아까 알아봤던 디폴트 앵커 들이 있습니다. 
만약 화면 중앙에 앵커를 두고 좌표는 (0, 0) 정렬은 (0.5, 0.5) 로 주면 화면 정중앙에 위치하는 UI 를 만들 수 있을겁니다. 

다음으로 스트레칭 시리즈 가로든 세로든 일직선으로 되어있는 앵커를 보겠습니다. 
먼저 가로 상단형 을 실습해보겠습니다 그러면 해바라기 아이콘이 화면 상단에 좌우로 나뉘어 있습니다. 
이런 형태의 앵커는 상단에 고정하는 UI 격투게임의 체력바 라던지 아니면 엘더스크롤이나 호라이즌 제로던의 상단 레이더 같은 UI 가 올 만 합니다. 
그러면 이 스트레칭 앵커의 조절가능한 옵션 값들은 무슨 의미인지를 살펴보겠습니다. 

아까 사용하던 버튼에서 Offset Left 라는 값을 0으로 줘보면 버튼의 왼쪽 면이 화면 좌측까지 늘어납니다. 또 비슷하게 Offset Right 라는것도 버튼의 오른면이 화면 우측까지 늘어나버립니다. 
그리고 Position Y 와 Size Y 가 있는데 UI를 위 아래로 움직이고 또 상하 크기를 조절하는 옵션들입니다. 
그러면 정렬은 어떤 역할을 할까요 정렬의 x 값은 수정을 해도 별 변화는 없는데 y 값은 UI의 가운데를 Position Y의 기준으로 삼는 옵션이었습니다.
여기서 볼 수 있듯이 항상 모든 옵션들이 유효하지는 않고 잉여 옵션이 있을 수 있습니다. 

마지막으로 전체 화면을 덮는 앵커는 어떤 느낌인지를 보겠습니다. 해바라기는 이제 각 모서리에 한개씩 핀을 꽂아놓은듯한 모양이 되었습니다.

이 전체화면 앵커의 옵션들은 어떤 역할을 하는지 알아보겠습니다. 일단 옵션들 이름이 Offset Left, Offset Up, Offset Right, Offset Down 으로 되어있습니다.
모든 값을 0으로 주면 버튼이 화면전체를 뒤덮게되고 캔버스 패널을 이리저리 움직여도 버튼이 그 크기에 맞춰 계속 화면을 뒤덮는 상황입니다.
득 Offset 값들은 각 기준으로부터 얼마나 떨어트리는지에 대한 옵션인것 같습니다. 

그러면 이 전체화면 앵커는 어떨때 사용하는 것이냐 하면 윈도우의 배경화면이나 게임에서 콘솔게임 시작할때 동의 문서 띄울때도 사용할 것입니다. 
또 다른 사용법으로는 전체화면 앵커에서 네 꼭지점에 있는 핀을 움직여 보면 이제 전체 화면이 아닌 캔버스 패널내에서 임의의 비율을 유지한 채로 화면 크기를 조절 할 수 있습니다. 
이런 것들을 텍스트로 설명하는것은 정확히 전달이 안되고 직접 한 두번 실습해 체득하는게 중요하겠습니다. 