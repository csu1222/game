


        Sprite vs Texture


현재 언리얼의 상태는 조명이 없기때문에 컴컴한 상태입니다. 그래서 조명과 배경을 깔아보겠습니다. 
인터넷에서 적당한 배경을 가져오던지 아니면 강의의 학습자료 이미지를 다운받고 다운받은 폴더를 엽니다. 
언리얼 엔진에 이 이미지 파일을 적용하는것은 굉장히 쉬운데 다운 폴더에서 드래그 드롬으로 언리얼 컨텐츠 브라우저 창에 놓거나 아니면 
컨텐츠 브라우저 우클릭후 윗쪽에 보면 프로젝트에 임포트 하기가 있습니다. 여기서 이미지가 있는 경로로 가 추가해주면됩니다. 

이미지 파일을 그냥 덩그라니 둬도 되지만 구조화를 하기 위해 따로 모아둘 폴더를 만들어도 좋습니다. 

이번에 추가한 이미지를 png 파일로 받았습니다. 
png 파일을 가져오고 커서를 가져다 대면 설명에 텍스쳐라고 되어있습니다. 
이 텍스쳐는 화면에 드래그 드롭을 하려고 해도 불가능하다고 커서가 엑스표가 됩니다. 

이제 Texture와 Sprite의 차이에 대해 알아보겠습니다. 

일단 껌껌한 맵에 큐브오브젝트 하나를 배치해보겠습니다. 
물테를 클릭하면 윤곽선은보이지만 실제로는 껌껌해서 안보입니다. 왼쪽 라이팅항목에서 포인트 라이트라고 전구같은 역할을합니다.

이제 큐브의 형태가 보이는데 처음에는 텅빈 텍스쳐파서 하얗게만 보이지만 아까 받은 png 파일을 큐브에 드래그 드롭하면 큐브의 각 면에 png 파일의 이미지가 씌워집니다. 
그 동시에 png 파일이 있는 폴더안에 Mat 라는 이름이 Material 재질이라는 파일이 만들어집니다. 

나중에 3D게임을 만들때 어떤 매쉬라는용어로 표현하는데 플레이어 캐릭터가 있다고했을때 이걸 단계별로 보면 처음에 큐브 오브젝트처럼 형태를 가지게 됩니다. 이걸 메쉬라고 하고 
모델러 직종분들이 조각을 만들듯 메쉬를 만들어주신다음 텍스쳐라고 불리는 이미지 파일을 붙혀서 색을 입힙니다. 이렇게 완성된 3D물체가 만들어집니다. 

이번시간에는 텍스쳐를 활용하진 안을것이기 때문에 잠시 알아봤던 포인트라이트와 큐브를 삭제해줍니다. 

그러면 2D게임을 만들기 위해 뭘해야하느냐 이미지 파일을 게임세상에 배치하고 싶은데 언리얼에서는 이런 기능들이 다 준비되어있다고했습니다. 
이미지 파일을 우클릭한 다음 스프라이트 액션 -> 페이퍼 2D 텍스쳐 세팅 적용 을 클릭합니다. 이것은 이 이미지 파일을 일반적인 3D 용 텍스쳐가 아닌 페이퍼 2D 용으로 사용하겠다고 
설정들을 바꿔준겁니다. 다시 이미지 파일 우클릭 -> 스프라이트 액션 -> 스프라이트 생성을 클릭해주면 새 파일이 생성되는데 
이미지 파일명 뒤에 _Sprite 가 붙는 파일이 생기고 각각 커서를 가져다 대면 원본은 텍스쳐이고 새로 생성한것은 스프라이트라고 나옵니다. 

이 스프라이트가 2D에서사용하는 리소스라고 볼 수 있습니다. 둘 다 아트 리소스, png 를 의미하는것은 맞지만 사용용도가 구별된것입니다. 
스프라이트는 이제 게임 세상에 드래그 드롭으로 배치할 수 있습니다. 

이쯤에서 다시 상기해야할 것은 