데이터 기초 

>bit : 컴퓨터는 전기적인 신호만 감지 할 수 있는데 전기가 통하고 안통하고 0 과 1 이 최소한의 단위 입니다

>byte : bit가 8개 모이면 byte

>;(주석) : 어셈블리 언어에서 주석을 나타내는 기호

>2진수 표기법 : 2진수 앞에 0b를 붙이면된다 ex) 0b11, 0b10 ...

>16진수 표기법 : 앞에 0x 를 붙인다

>CPU의 구조 : ALU(arithmetic and logical unit 산술 논리 장치), 컨트롤 유닛, 레지스터, 버스 인터페이스

>메모리의 종류? : CPU안에 있는 레지스터, RAM, 하드디스크(HDD,SSD) 순으로 속도가 빠릅니다. CPU와의 거리가 
가까울 수록 빠르다고 생각할 수도 있습니다.

>레지스터 : CPU에서 연산중에 잠시 저장해야할 데이터를 저장해놓는 메모리 

>rax : 레지스터의 크기 중 64비트의 크기를 사용하는것을 rax 라고 합니다.(32비트=eax, 16비트=ax, ax를 둘로 쪼개면 각각ah,al)
가운데의 a를 a,b,c,d 로 바꾸면 다른 각각 주소가 할당합니다.

>엔디안 : 엔디안은 메모리에서 데이터를 저장할 때 어떤 순서로 저장하는지 입니다. 빅 엔디안과 리틀 엔디안 미들 엔디안이 있다고 합니다.

>빅 엔디안 : 데이터를 저장할때 최상위 바이트부터 차례로 저장하는 방식 
(예시)(0x12,0x34,0x56,0x78)
# 최상위란 메모리 주소의 숫자가 낮을 수록 최상위 

>리틀 엔디안 : 데이터를 저장할 때 최하위 바이트부터 차례로 저장하는 방식 대부분의 윈도우컴퓨터는 리틀 엔디안입니다.
(예시)(0x78,0x56,034,0x12)

>빅 엔디안과 리틀 엔디안 : 직관적으로는 빅 엔디안이 더욱 직관적이지민 왜 대부분이 사용하는 윈도우즈 환경에서는 리틀 엔디안인가하면
리틀 엔디안의 경우 포인터 값 참조가 쉽다는 점이 장점입니다. 제일 마지막 값이 처음으로 오기 때문에 첫 1byte를 가져오면 된다고 합니다.
빅 엔디안은 주로 네트워크에 사용되며 TCP/IP에서 사용합니다. 장점은 왼쪽부터 차례대로 저장되므로 읽기 편하다는 점이있습니다.