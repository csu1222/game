


    복사와 참조


복사와 참조에 대한 개념을 알아보겠습니다. 

이 개념이 지금 이 블루 프린트 강의를 통틀어서 5손가락안에드는 중요 개념입니다. 

C언어의 포인터와 밀접한 관련이 있습니다. 

복사와 참조를 왜 이렇게 강조하는지를 알아보기 위한 예시를 들어보겠습니다. 

int 타입 변수 A와 B가 있고 A는 100, B는 200 이라는 값을 가지고 있습니다. 이 두 변수의 값을 서로 바꾸는 소위 스왑을 하려고합니다. 
얼핏 생각 하기에는 그냥 Set A 로 B를 하고 Set B에 A를 하면되지 않나? 생각 할 수 있는데 
첫번째 Set A 에 B를 하는 순간 원래 A값이었던 100은 사라져서 B에 담을 수 없습니다. 그래서 스왑에는 임시 변수 하나를 만들어 옮길 데이터를 임시적으로 저장해주는게 
기초입니다. 

이 내용이 복사, 참조와 무슨 관련이 있는지는 아직 감이 안올수 있습니다. 
그러면 이전시간에 배웠던 함수로 위의 스왑을 다시 구현해보겠습니다. My Swap이라는 이름의 함수를 만들고 입력에 int 두개 A,B 를 입력 받는다고 하겠습니다. 
중간 임시 변수가 필요했었는데 함수의 로컬 변수로 임시변수를 만들어 하면 될것 같습니다. 
잘 실행되는지 My Swap 끝에 아무 노드를 하나 만들어 연결한 다음 중단점을 걸고 실행해봤습니다. 함수내에서 살펴보면 A값과 B값이 서로 잘 바뀌어 있는걸 확인했습니다. 
이제 마지막 중단점 걸었던 노드를 삭제하고 그냥 전체 실행을 해보면 이상하게도 Swap되지 않은 상태의 값이 출력됩니다. 

왜 이런 결과나 나오냐 하면 복사와 참조의 개념때문입니다. 
메모리 구조를 다시 살펴봐야합니다. 
처음에 레벨 블루 프린트에서 A, B 변수를 만들어 줬습니다. 그리고 함수 My Swap을 만들었습니다. 이 함수를 실행하기전에 입력값으로 두개의 int를 받도록 했습니다. 
여기서 함수에게 인자로 어떤 값을 주게되면 왠만한 기본 타입들은 모두 복사 타입으로 넘겨지게 됩니다.

이전에 블루프린트의 Get을 할때 변수의 값을 '읽어'온다고 했습니다. 꺼내온다가 아니라 읽어온다고 한 이유가 Get 한 값을 수정한다고해서 변수의 값이 변하는게 아니라 
Set을 해야 변수의 값이 변한다고 했습니다. 이것이 복사 타입으로 가져오는것입니다. 

함수에서 실제로 어떻게 동작하냐면 A변수의 값을 읽어와 함수의 첫번째 인자에 복사해주고 B의 값을 복사해 두번째 인자에 복사한 다음 연산에 들어갑니다. 두 인자 모두 복사해온 상태라
변수 원본에는 아무런 영향을 주지 않는다는것입니다. 

그러면 함수를 사용하는 이유가 없지 않나 싶습니다. 

원하는건 함수라는 도구를 사용해 인자로 넘겨준 변수들을 원하는대로 가공하고 싶은겁니다. 그러기 위해 이번 시간의 두번째 주제인 참조타입을 알아야 합니다. 
어떻게 사용하냐면 함수쪽으로 가서 입력인자들을 보면 왼쪽에 화살표를 눌러 펼칠 수 있습니다. 그 옵션중 Pass-by-Reference 혹은 참조 전달 이라는 체크박스를 켜줍니다. 
그러면 함수의 인자 핀이 마름모꼴로 변하고 커서를 가져다 대면 설명으로 참조전달한다고 뜹니다. 이상태로 컴파일 저장후 실행해보면 
우리가 의도한대로 변수 원본을 수정할 수 있도록 됩니다. 


그러면 참조라는게 어떻게 동작하길레 이런 결과가 나타나는지 궁금합니다. 
참조는 사실 주솟값을 가지고 변수를 사용하는것입니다. 이게 C언어의 포인터의 핵심힙니다. 
변수를 만들게 되면 변수 A는 실제 컴퓨터의 메모리에 어떤 주소에 데이터가 저장이 됩니다. 그 메모리 주소값을 들고 있는 변수타입이 포인터입니다. 그리고 이 메모리 주소를 
인자로 주는것이 참조 전달입니다. 