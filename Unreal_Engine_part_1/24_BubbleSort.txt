


        버블 정렬 


정렬이라는건 어떤 원소들이 모여있는 자료구조들에서 어떤 규칙을 통해 원소들을 재 배치 하는것입니다. 

정렬에는 여러 방법이 있는데 그중에서도 가장 기초적이고 구현하기도 쉬운 버블 정렬에 대해 알아보겠습니다. 

버블정렬이라는 이름의 이유는 버블 = 거품 인 만큼 거품안에서 정렬이 일어나느것 같다고 해서 붙여진 이름입니다. 
어떤 배열이 있다고 했을때 맨 앞의 두 원소의 크기를 비교해나가는 방식입니다 

만약 총 길이가 5개인 배열이 있다고 하면 첫번째, 두번째 원소를 비교해 큰 수를 뒤쪽으로 이동하고 다음 두번째, 세번째 원소를 비교하고 
이런식으로 쭉 해서 네번째, 다섯번째 원소를 비교하면이제 배열 전체 원소중 가장 큰 원소가 맨 뒤로 갔을겁니다. 
다음 루프를 도는데 마지막원소는 빼고 다시 졍렬을 해주면 됩니다. 계속 반복하면 모든 원소가 크기 순으로 정렬이 되는것이 
버블 정렬의 원리입니다. 

버블에 들어갈 두 인덱스를 두 정수 변수로 관리하는 방법으로 해보겠습니다. left 인덱스가 0이라면 right인덱스는 1 이 될것이고 계속 1차이나게끔 진행될겁니다. 
reft는 0부터 배열 Numbers의 길이 -1 번 인덱스까지 루프를 돌면 될것같습니다. 여기에 +1 을 한 right는 reft가 가장 끝에 왔을때 배열의 마지막 인덱스를 넘어서면 안되기 때문에 
Min 함수를 이용해 right의 최대 크기를 제한 해야 합니다. 
이렇게 비교할 인덱스들을 가져왔으면 Numbers 에서 인덱스에 해당하는 원소를 꺼내와야 합니다. Get 배열 함수를 사용하면됩니다. 
둘을 비교해서 앞의 원소가 더 크다면 서로 스왑해주면 됩니다. 이 작업을 Numbers의 길이 -1 번 실행하면 배열안의 가장 큰 수 가 맨 뒤로 가게 됩니다. 
여기서 더 나아가 모든 수를 정렬하고 싶다면 위의 동작을 Numbers의 원소 갯수만큼 반복해주면 됩니다. 

이렇게 하면 버블 정렬을 직관적이게 만들어 본게 됩니다. 
물론 정렬에는 더욱 많은 방법이 있고 효율적인 방법도 있을겁니다. 하지만 일단 그중에 가장 직관적인 방법의 정렬을 알아 봤습니다. 