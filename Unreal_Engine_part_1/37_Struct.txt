


    구조체 


여기까지 블루프린트에서 알아야할 기본적인 개념들을 쭉 둘러본것 같습니다. 

이후로는 이동, 회전 같은 실습들을 해볼건데 

지금까지 변수를 사용해 실습을 해봤었습니다. 그 변수 타입중 마지막 세개 Vector, Rotate, Transform 이 이동 회전등과 관련되어있습니다. 

그래서 먼저 Vector 변수를 만들어 레벨 블루프린트에 배치하고 우클릭을 해보면 Split Struct Pin 구조체 핀 분할  이라는 것이 있습니다. 
이걸 눌러보면 float 3개 짜리로 나뉘는걸 볼 수 있고 다시 우클릭해서 구조체 핀 재결합을 하면 다시 변수 하나로 합쳐집니다. 

이 내용에 대해 알아보기 위해 구조체에 대한 것을 알아봐야합니다. 


구조체가 무었이고 그 필요성은 무었인지부터 시작하겠습니다. 

어떤 변수 int타입의 Hp를 만들어 관리한다고 해보겠습니다. 꼭 Hp뿐만아니라 게임을 만들다보면 캐릭터나 몬스터는 아주 많은 종류의 데이터를 가지고 있을겁니다. 
여러종류의 스텟들과 캐릭터 이름, 직업, 아이디, 현재 레벨, 필요 경험치, 찍은 스킬들, 어떤 아이템을 가지고 있는지 등등 이 있을건데 
이런 많은 갯수의 변수들을 관리할때 하나로 묶어서 관리하는 방법이 있는데 그것이 바로 '구조체'라는 개념입니다.

구조체는 말 그대로 여러가지 타입을 하나로 뭉쳐서 관리하는 개념입니다. 

구조체를 만드는 방법은 Map으로 가서 컨텐츠 브라우저 빈곳을 우클릭, 블루프린트 란에서 Structure라는 것을 클릭해 만듭니다. 

스텟을 관리하는 구조체라는 의미에서 StatInfo 라는 이름으로 만들었습니다. 
더블클릭으로 파일을 열면 변수들을 추가해 줄 수 있다는 버튼이 있습니다. 기본적으로 MemberVar_0 이라는 불리언 타입이 있는데 그냥 필요한 변수를 만들어주면됩니다.
레벨 Hp, 최대 Hp, 속도 등 변수를 추가해 줬는데 추가한 변수들이 중요한게 아니라 변수들을 관리하는 더 큰 단위의 개념이 구조체 라는것이 중요합니다.

이렇게 만든 구조체는 어떻게 사용하는가 하면 

다시 레벨 블루프린트로 돌아가 새로운 변수를 하나 만들어 주겠습니다. 그런데 이 변수의 타입을고를때 Structure 라는 항목이 있습니다. 
StatInfo 를 검색해 변수를 만든다음 확인해보면 변수를 하나 만들었을 뿐인데 그 안에서 Level, Hp, MaxHp, Speed 라는 변수 묶음이 생성되는걸 볼 수 있습니다. 

결국 뭉쳐서 관리한다 뿐이지 크게 다른것은없습니다. 

그런데 여기서 약간 이상한것이 이 구조체를 세팅할때 어떻게 세부 변수들을 하나씩 세팅할지 애매합니다. 이럴때 아까 벡터를 분할한것처럼 분할해 
각 변수에 대해 핀을 하나씩 넣어줄 수 있습니다. 
출력값도 그냥 구조체 하나로 출력하려면 바로 꺼내 사용하면되고 그게 아니라면 출력도 분할해 원하는데이터를 하나씩 꺼낼수 있습니다. 

Stat이라고 이름붙힌 이 구조체의 데이터를 읽고 싶을때 통째로 Get 할 수도 있지만 대부분 구조체의 데이터중 일부만 필요할겁니다. 핀을 땡겨서 Break StatInfo 라는 노드가 있는데 이걸 
배치해보면 쪼개서 각각 하나씩 꺼낼 수 있게 해줍니다. 
Get 이 아니라 Set을 하고 싶어졌다면 이거 역시 각각 하나씩 세팅하고 싶을 수 있습니다. 그럴땐느 Set Members in StatInfo 라는 노드를 사용하면됩니다. 
Set Members 노드를 배치하면 오른쪽 디테일 창에 구조체에 포함된 변수 이름과 그 체크 박스들이 뜹니다. 그걸 체크하면 해당 핀이 노드에 추가되는 방식입니다. 

또 한가지 중요한 내용은 이전에 참조 타입이라는 것에 대해 중요하게 배웠습니다. 참조 타입이라고 해서 주소값만을 저장하고 원본은 따로 두는 개념이었습니다. 
그런데 Stat2 라는 새 구조체 변수를 하나 만든다음 Stat을 Stat2에 Set 해봤습니다. 여기서 보고 싶은건 구조체는 진짜 데이터가 복사가 되는지 아니면 원본을 공유하는지 입니다. 

Stat2의 아무 변수의 값을 수정한다음 Stat과 Stat2의 값이 같은지를 확인할겁니다.

실제 테스트를 해보면 Stat의 데이터가 Stat2에서 수정한 값이 아니라는걸 알 수 있는데 여기서 알 수 있는것은 구조체는 Set을 하면 복사가 이뤄진다는걸 알 수 있습니다.
또 그러면 실제 게임에서 구조체를 어느 캐릭터 객체에 세팅하면 복사가 일어 나게 될것이라는것도 알 수 있습니다. 

만약 복사가 일어 나지 않는걸 원한다면 이것을 레퍼런스로 받게끔 설정해주면 될겁니다. Set Members 노드는 실제로 입력 값을 레퍼런스로 받아 마름모 꼴 핀인걸 알 수 있습니다. 

복사를 조심해야 하는것은 나중에 StatInfo 라는 구조체의 데이터가 방대해진다면 복사를 하는 순간에 생각보다 많은 부하가 걸리는것을 조심해야 하기 때문입니다.


마지막으로 어떤 함수를 만든 다음 입력을 StatInfo 를 받도록 해주겠습니다. 그러면 이 함수를 호출할때 StatInfo 를 받아줘야 합니다. 이때 우리가 원하는 값을 가진 StatInfo를 
인자로 받으려면 어떻게 해야할까요? 새로 구조체 변수를 만들어 원하는 값을 세팅해준 다음 인자로 넘겨주던지 아니면 
Split Structure Pin 을 한다음 원하는 값을 직접 넣어 줄 수 있고 
이것도 아니라면 이제 입력핀을 쭉 땡겨 연관 노드를 보면 Make StatInfo 를 할 수 있습니다. 사실 이전에 Spawn Actor 에서 Transform을 만들때 사용하던 방법입니다. 

구조체에 대한 내용은 여기까지 입니다. 변수들을 묶어서 관리할 수 있는 방식이구나 할 수 있습니다. 